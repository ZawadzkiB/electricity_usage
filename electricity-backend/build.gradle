plugins {
	id 'org.springframework.boot' version '2.2.4.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id "jacoco"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

jacoco{
	toolVersion = '0.8.2'
}

ext {
	set('springCloudVersion', "Hoxton.SR1")
}

dependencies {
	compileOnly 'org.projectlombok:lombok'
	compile group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1'
	compile group: 'com.sun.xml.bind', name: 'jaxb-core', version: '2.3.0.1'
	compile group: 'com.sun.xml.bind', name: 'jaxb-impl', version: '2.3.1'
	compile group: 'com.squareup.okhttp3', name: 'okhttp', version: '4.3.1'
	compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
	compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j'
	annotationProcessor 'org.projectlombok:lombok'
	testCompile group: 'org.assertj', name: 'assertj-core', version: '3.14.0'
	testCompile group: 'com.github.tomakehurst', name: 'wiremock', version: '2.24.1'
	testCompile group: 'io.rest-assured', name: 'rest-assured', version: '4.2.0'
	testCompile group: 'io.rest-assured', name: 'rest-assured-common', version: '4.2.0'
	testCompile group: 'io.rest-assured', name: 'json-path', version: '4.2.0'
	testCompile group: 'io.rest-assured', name: 'xml-path', version: '4.2.0'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.security:spring-security-test'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				counter = 'LINE'
				value = 'COVEREDRATIO'
				minimum = 0.7
			}
		}
	}
}

jacocoTestReport {
	reports {
		csv.enabled false
		xml.enabled false
		html {
			enabled true
			destination file("$buildDir/reports/jacoco")
		}
	}
	executionData(test)
}

check.dependsOn jacocoTestCoverageVerification
check.dependsOn jacocoTestReport

test {
	useJUnitPlatform()
}


